{"version":3,"sources":["Context/UserContext.tsx","components/calendar_Components/Calendar/Calendar_Day/Calender_View_Day.tsx","components/calendar_Components/Calendar/Calendar_Month/Calender_Shift_Component.js","components/calendar_Components/Calendar/Calendar_Month/Calendar_View_Month.js","components/table_Components/Button.js","components/table_Components/Table.js","Employees.tsx","Header.tsx","Home.tsx","components/PopUp/PopUp.tsx","components/RegisterForm/RegisterView.tsx","loginPage/LoginPage.tsx","MyProfile.tsx","NavigationBar.tsx","PrivateRoute.tsx","Settings.tsx","MainBody.tsx","index.tsx"],"names":["UserContext","createContext","undefined","UserContextProvider","props","useState","id","role","loggedOn","user","setUser","checkCookieLogin","a","console","log","Axios","post","process","data","withCredentials","result","success","formatUser","useEffect","Provider","value","children","CalendarDay","Date","currentDay","setCurrentDay","shifts","setShifts","date","useParams","getShifts","nextDay","addDays","prevDay","className","columns","i","push","onClick","format","map","firstname","email","shift","index","startTime","endTime","renderCells","ShiftComponent","src","alt","name","timeStart","timeEnd","Calendar","currentMonth","setCurrentMonth","useHistory","workingUsers","setWorkingUsers","method","url","addMonths","then","response","finally","nextMonth","prevMonth","days","startDate","startOfWeek","weekStartsOn","renderDays","monthStart","startOfMonth","monthEnd","endOfMonth","endDate","endOfWeek","rows","day","formattedDate","getISOWeek","isSameMonth","to","isSameDay","parseISO","classNames","classes","filter","Boolean","join","Button","rest","type","PageButton","EmployeeTable","React","useMemo","Header","accessor","Cell","row","original","image","width","username","bday","jobposition","phone","mail","tableInstance","useTable","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","headerGroup","headers","column","Filter","render","class","getHeaderGroupProps","getHeaderProps","getRowProps","cells","cell","getCellProps","disabled","pageIndex","length","pageSize","onChange","e","Number","target","Employees","setData","getAllUsers","get","r","avatar","lastname","birthday","newTheme","expanded","setExpanded","theme","setTheme","history","root","window","document","documentElement","burgerMenuOnClick","collapsed","fontSize","Switch","classList","remove","add","Home","PopUp","trigger","setTrigger","formtype","RegisterForm","setPopTrue","setPopUp","password","confirmPassword","formData","setFormData","doRegister","handleChange","event","popValues","isOpen","setIsOpen","onSubmit","preventDefault","placeholder","LoginPage","useContext","authentication","setAuthentication","doLogin","alert","errorMessage","htmlFor","MyProfile","getOneUser","createdDate","NavigationBar","PrivateRoute","renderProps","auth","renderNoAuth","SettingsButton","title","Settings","MainBody","noAuth","navBarCollapsed","setNavBarCollapsed","exact","path","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4d7bdbd9.chunk.js","sourcesContent":["import Axios from 'axios'\r\nimport { authUser } from 'devops-shiftplanner/Backend/src/Types'\r\nimport React, { createContext, Dispatch, SetStateAction, useEffect, useState } from 'react'\r\n\r\nexport type authContextValue = {\r\n    user: authUser\r\n    setUser: Dispatch<SetStateAction<authUser>>\r\n}\r\n\r\nexport const UserContext = createContext<authContextValue | undefined>(undefined)\r\n\r\nconst UserContextProvider = props => {\r\n    const [user, setUser] = useState<authUser>({\r\n        id: '',\r\n        role: false,\r\n        loggedOn: false,\r\n    })\r\n\r\n    const checkCookieLogin = async () => {\r\n        console.log('is this being called?')\r\n        const result = (\r\n            await Axios.post<\r\n                { success: true; data: { id: string; role: boolean } } | { success: false; errorMessage: string }\r\n            >(`${process.env.REACT_APP_URL}/api/checkCookie`, { data: '' }, { withCredentials: true })\r\n        ).data\r\n\r\n        if (result.success) {\r\n            const formatUser: authUser = { id: result.data.id, role: result.data.role, loggedOn: true }\r\n            setUser(formatUser)\r\n        } \r\n    }\r\n\r\n    useEffect(() => {\r\n        checkCookieLogin()\r\n    }, [])\r\n\r\n    return <UserContext.Provider value={{ user, setUser }}>{props.children}</UserContext.Provider>\r\n}\r\n\r\nexport default UserContextProvider\r\n","import Axios from 'axios'\r\nimport { addDays, format } from 'date-fns'\r\nimport { UserDayShift } from '../../../../../../Backend/src/Types'\r\nimport { useParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState} from 'react'\r\n\r\nexport const CalendarDay: React.FC = () => {\r\n    const [currentDay, setCurrentDay] = useState(new Date())\r\n    const [hover, setHover] = useState(false)\r\n    const [shifts, setShifts] = useState<UserDayShift[] | undefined>([])\r\n\r\n\r\n    const { date } = useParams();\r\n    \r\n    const getShifts = async () => {\r\n        // console.log('before get')\r\n        try {\r\n            const result = (await Axios.post<UserDayShift[]>('http://localhost:8080/api/fetchUsersShift', { date: date }, { withCredentials: true })).data\r\n            setShifts(result)\r\n            // console.log('printing result of fetch of users\\n')\r\n            // console.log(result)\r\n        } catch (e) {\r\n            console.log('couldnt fetch user shifts: ' + e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getShifts()\r\n    }, [])\r\n\r\n    function nextDay() {\r\n        setCurrentDay(addDays(currentDay, +1))\r\n    }\r\n    function prevDay() {\r\n        setCurrentDay(addDays(currentDay, -1))\r\n    }\r\n    \r\n    if(!shifts) {\r\n        // console.log(\"ikke loadet endnu: \" + shifts)\r\n        return <span data-testid=\"loading\"> Loading elements.. </span>\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        const dateFormat = 'B..BBB'\r\n        return (\r\n            <div className=\" max-wheader bg-sky-800 text-black font-bold\">\r\n                <div className=\"icon cursor-pointer ml-5\" onClick={prevDay}>\r\n                    {' '}\r\n                    chevron_left{' '}\r\n                </div>\r\n                <span className=\"\"> {format(currentDay, dateFormat)} </span>\r\n                <div className=\"icon cursor-pointer\" onClick={nextDay}>\r\n                    {' '}\r\n                    chevron_right{' '}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    const renderCells = () => {\r\n        let columns = [] as any\r\n\r\n        for (let i = 0; i < 24; i++) {\r\n            columns.push(\r\n                <div className=\"text-center text-black text-sm sm:text-base font-bold p-1 sm:p-2\" key={`tid celle ${i}`}> {i % 24}:00 </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"flex flex-col max-h-screen mx-5 mt-5\">\r\n                {renderHeader()}\r\n                <div className=\"grid grid-cols-24 grid-flow-auto divide-x-2 divide-sky-800 overflow-x-hidden overflow-y-auto gap-x-0 gap-y-2 pb-1  border border-black bg-gray-200 justify-center\" data-testid=\"grid\" key=\"grid\">\r\n                    {columns}\r\n\r\n                    {\r\n                        shifts.map(({ firstname, email, shift }) => {\r\n                            return shift.map(({ startTime, endTime }, index) => {\r\n                                return (\r\n                                    <>\r\n                                        <div\r\n                                            className={`flex flex-col border-2 border-black col-start-${ startTime + 1} col-span-${endTime - startTime} col-end-${endTime} p-1 bg-sky-200 hover:bg-sky-400 text-black font-bold justify-center items-center `}\r\n                                            key={index}\r\n                                            data-testid=\"shifts\">\r\n                                                \r\n                                                <p className=\"flex w-full text-sm\"> {firstname} </p>\r\n                                                <p className=\"flex w-full text-sm\"> {email} </p>\r\n                                                \r\n                                        </div>\r\n                                        <div className=\"span-1\"></div>\r\n                                    </>\r\n                                )\r\n                            })\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n    return <div className=\"flex flex-col flex-none bg-white\" data-testid=\"resolved\"> {renderCells()} </div>\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nexport const ShiftComponent = props => {\r\n    const [worker, setWorker] = useState({})\r\n\r\n    const [day, setDay] = useState(null)\r\n    const [time, setTime] = useState([])\r\n    const [workAssignment, setWorkAssignment] = useState('')\r\n    const [description, setDescription] = useState('')\r\n\r\n    return (\r\n        <div className=\"flex clear-right pt-3 pl-2 items-center justify-center\">\r\n            <img\r\n                className=\"rounded-full flex items-center w-6 h-6\"\r\n                src=\"https://content.codecademy.com/courses/React/react_photo-octopus.jpg\"\r\n                alt={props.name}\r\n            />\r\n            <p className=\"pl-1 h-6 align-middle py-0.5\">{props.name}</p>\r\n            <p className=\"pl-1 h-6 align-middle py-0.5\">\r\n                {props.timeStart} - {props.timeEnd}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import {\r\n    addDays,\r\n    addMonths,\r\n    endOfMonth,\r\n    endOfWeek,\r\n    format,\r\n    getISODay,\r\n    getISOWeek,\r\n    isSameDay,\r\n    isSameMonth,\r\n    parseISO,\r\n    startOfMonth,\r\n    startOfWeek,\r\n} from 'date-fns'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport './Calendar_View__Month.css'\r\nimport { ShiftComponent } from './Calender_Shift_Component'\r\nimport Axios from 'axios'\r\n\r\nexport const Calendar = () => {\r\n    const [currentMonth, setCurrentMonth] = useState(new Date())\r\n    const history = useHistory()\r\n\r\n    const [workingUsers, setWorkingUsers] = useState([])\r\n    /*const [shifts, setShifts] = useState([\r\n        { name: 'Shania', timeStart: '08:00', timeEnd: '16:00', date: new Date() },\r\n        { name: 'Mikkel', timeStart: '10:00', timeEnd: '14:00', date: addDays(new Date(), -1) },\r\n        { name: 'Mads', timeStart: '??:??', timeEnd: '??:??', date: new Date() },\r\n        { name: 'Jacob', timeStart: '09:00', timeEnd: '16:00', date: addDays(new Date(), -3) },\r\n    ])\r\n    */\r\n    useEffect(() => {\r\n        Axios({\r\n            method: 'post',\r\n            url: `${process.env.REACT_APP_URL}/api/getUsersForMonth`,\r\n            data: {\r\n                \"date\": format(currentMonth, 'yyyy-MM'),\r\n                \"datep1\": format(addMonths(currentMonth, 1), 'yyyy-MM'),\r\n                \"datem1\": format(addMonths(currentMonth, -1), 'yyyy-MM')\r\n            }\r\n        }).then((response) => {\r\n            setWorkingUsers(response.data);\r\n        }).finally(() => {\r\n        });\r\n    }, [currentMonth])\r\n\r\n\r\n    const nextMonth = () => {\r\n        setCurrentMonth(addMonths(currentMonth, 1))\r\n    }\r\n\r\n    const prevMonth = () => {\r\n        setCurrentMonth(addMonths(currentMonth, -1))\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        const dateFormat = 'LLLL yyyy'\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"icon cursor-pointer ml-5\" onClick={prevMonth}>\r\n                    {' '}\r\n                    chevron_left{' '}\r\n                </div>\r\n                <span className=\"\"> {format(currentMonth, dateFormat)} </span>\r\n                <div className=\"icon cursor-pointer\" onClick={nextMonth}>\r\n                    {' '}\r\n                    chevron_right{' '}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderDays = () => {\r\n        const dateFormat = 'EEE'\r\n        const days = []\r\n\r\n        let startDate = startOfWeek(currentMonth, { weekStartsOn: 1 })\r\n        days.push(<div className=\"border-filler\" className={`h-full w-5`}></div>)\r\n        for (let i = 0; i < 7; i++) {\r\n            days.push(\r\n                <div className=\"col text-center box-content\" key={i}>\r\n                    {format(addDays(startDate, i % 7), dateFormat)}\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"days flex flex-wrap flex-row w-full uppercase font-normal text-base border divide-x\">\r\n                {days}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderCells = () => {\r\n        const monthStart = startOfMonth(currentMonth)\r\n        const monthEnd = endOfMonth(monthStart)\r\n        const startDate = startOfWeek(monthStart, { weekStartsOn: 1 })\r\n        const endDate = endOfWeek(monthEnd, { weekStartsOn: 1 })\r\n\r\n        const dateFormat = 'd'\r\n        const rows = []\r\n\r\n        let days = []\r\n        let day = startDate\r\n        let formattedDate = ''\r\n\r\n        while (day <= endDate) {\r\n            //Inserting a collumn with the week numer first.\r\n            days.push(\r\n                <div className={`flex flex-col justify-end h-40 w-5`}>\r\n                    <div className=\"font-bold\">{getISOWeek(day)}</div>\r\n                </div>\r\n            )\r\n            //then we insert the days.\r\n            for (let i = 0; i < 7; i++) {\r\n                formattedDate = format(day, dateFormat)\r\n                days.push(\r\n                    <div\r\n                        className={`col cell ${!isSameMonth(day, monthStart) ? 'disabled' : ''}`}\r\n                        key={day}\r\n                        // onClick={() => history.push('/calendarDay')}\r\n                    >\r\n                        <div className=\"number font-bold float-right pr-3 pt-3 text-xs \">{formattedDate}</div>\r\n                        <Link to={`/calendarDay/${format(day, 'yyyy-MM-dd')}`}>\r\n                            <div className=\"clear-right overflow-y-auto h-32 text-base disable-scrollbars\">\r\n                                {workingUsers.map(({ firstname, shifts }) =>\r\n                                    <ul>\r\n                                        {shifts.map(({ date, startTime, endTime }) =>\r\n                                        // Link for routing to day page\r\n                                        isSameDay(day, parseISO(date)) ? (\r\n                                            <li className={'float-left'}>\r\n                                                    <ShiftComponent name={firstname} timeStart={startTime} timeEnd={endTime} />\r\n                                                {' '}\r\n                                            </li>\r\n                                        ) : (\r\n                                            <li className='false'/>\r\n                                        )\r\n                                    )}\r\n                                    </ul>\r\n                                )}\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                )\r\n                day = addDays(day, 1)\r\n            }\r\n            rows.push(\r\n                <div className=\"row\" key={day}>\r\n                    {days}\r\n                </div>\r\n            )\r\n            days = []\r\n        }\r\n        return <div className=\"body\">{rows}</div>\r\n    }\r\n\r\n    return (\r\n        <main className=\"calendar p-5 leading-none\">\r\n            {renderHeader()}\r\n            {renderDays()}\r\n            {renderCells()}\r\n        </main>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport function classNames(...classes) {\r\n    return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nexport function Button({ children, className, ...rest }) {\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            className={\r\n                classNames(\r\n                    \"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\",\r\n                    className\r\n                )}\r\n            {...rest}\r\n        >\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport function PageButton({ children, className, ...rest }) {\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            className={\r\n                classNames(\r\n                    \"relative inline-flex items-center px-2 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\",\r\n                    className\r\n                )}\r\n            {...rest}\r\n        >\r\n            {children}\r\n        </button>\r\n    )\r\n}","import {useTable, usePagination} from 'react-table'\r\nimport React from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport {Button, PageButton} from \"./Button.js\";\r\nimport { ChevronDoubleLeftIcon, ChevronLeftIcon, ChevronRightIcon, ChevronDoubleRightIcon } from '@heroicons/react/solid'\r\nimport Axios from \"axios\";\r\n//import {columns, data} from \"./Data.js\"\r\n\r\nexport const EmployeeTable = () => {\r\n\r\n    //backend\r\n\r\n    /*const getEmployee = async () => {\r\n        const result = (\r\n            await Axios.get<\r\n            | { success: true; data: { user: { id: string; role: boolean } } }\r\n            | { success: false; errorMessage: string }\r\n            >('http://localhost:8080/login', authentication, { withCredentials: true })\r\n        ).data\r\n\r\n        if (result.success) {\r\n            const formatUser: authUser = { id: result.data.user.id, role: result.data.user.role, loggedOn: true }\r\n            setUser(formatUser)\r\n            console.log('Loggin user data' + user.id, user.role, user.loggedOn)\r\n            history.push('/')\r\n        } else {\r\n            //@ts-ignore\r\n            alert(result.errorMessage)\r\n        }\r\n    }*/\r\n\r\n\r\n    //frontend\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: \"Image\",\r\n                accessor: \"image\",\r\n                Cell: props => (\r\n                    <img\r\n                        src={props.row.original.image}\r\n                        width={60}\r\n                        alt='Employee'\r\n                    />\r\n                )\r\n            },\r\n            {\r\n                Header: \"Name\",\r\n                accessor: \"username\",\r\n            },\r\n            {\r\n                Header: \"Birthday\",\r\n                accessor: \"bday\",\r\n            },\r\n            {\r\n                Header: \"Job-Position\",\r\n                accessor: \"jobposition\",\r\n            },\r\n            {\r\n                Header: \"Phone\",\r\n                accessor: \"phone\",\r\n            },\r\n            {\r\n                Header: \"Mail\",\r\n                accessor: \"mail\",\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const data = React.useMemo(\r\n        () => [\r\n            {\r\n                image:\"https://freesvg.org/img/abstract-user-flat-4.png\",\r\n                username: 'Brin',\r\n                bday: 26,\r\n                jobposition: 'din mor',\r\n                phone: '12345678',\r\n                mail: ' email@email.com'\r\n            }, {\r\n                image: \"https://freesvg.org/img/abstract-user-flat-4.png\",\r\n                username: 'Jac',\r\n                bday: 22,\r\n                jobposition: 'din mor',\r\n                phone: '12345678',\r\n                mail: ' email@email.com'\r\n            }, {\r\n                image: \"https://freesvg.org/img/abstract-user-flat-4.png\",\r\n                username: 'Mik',\r\n                bday: 40,\r\n                jobposition: 'din mor',\r\n                phone: '12345678',\r\n                mail: ' email@email.com'\r\n            }, {\r\n                image: \"https://freesvg.org/img/abstract-user-flat-4.png\",\r\n                username: 'Stef',\r\n                bday: 30,\r\n                jobposition: 'din mor',\r\n                phone: '12345678',\r\n                mail: ' email@email.com'\r\n            }, {\r\n                image: \"https://freesvg.org/img/abstract-user-flat-4.png\",\r\n                username: 'Shan',\r\n                bday: 32,\r\n                jobposition: 'din mor',\r\n                phone: '12345678',\r\n                mail: ' email@email.com'\r\n            }, {\r\n                image: \"https://freesvg.org/img/abstract-user-flat-4.png\",\r\n                username: 'yieks',\r\n                bday: 37,\r\n                jobposition: 'din mor',\r\n                phone: '12345678',\r\n                mail: ' email@email.com'\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const tableInstance\r\n        = useTable({columns, data},\r\n        usePagination,\r\n        )\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n\r\n        page,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        state,\r\n    } = tableInstance\r\n\r\n\r\n    return (\r\n        <div className=\"bg-lightgrey px-8 py-8 m-10\">\r\n            <p>Tilføj medarbejder</p>\r\n            <p>Fjern medarbejder</p>\r\n                <div className=\"sm:flex sm:gap-x-2\">\r\n                    {headerGroups.map((headerGroup) =>\r\n                        headerGroup.headers.map((column) =>\r\n                            column.Filter ? (\r\n                                <div className=\"mt-2 sm:mt-0\" key={column.id}>\r\n                                    {column.render(\"Filter\")}\r\n                                </div>\r\n                            ) : null\r\n                        )\r\n                    )}\r\n                </div>\r\n            <table class=\"rounded border border-black\" {...getTableProps()}>\r\n                <thead class=\"bg-darkgrey\">\r\n                {// Loop over the header rows\r\n                    headerGroups.map(headerGroup => (\r\n                        // Apply the header row props\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {// Loop over the headers in each row\r\n                                headerGroup.headers.map(column => (\r\n                                    // Apply the header cell props\r\n                                    <th class=\" px-24 py-3 text-gray-500\" {...column.getHeaderProps()}>\r\n                                        {// Render the header\r\n                                            column.render('Header')}\r\n                                    </th>\r\n                                ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                {/* Apply the table body props */}\r\n                <tbody class=\"divide-y bg-lightgrey\" {...getTableBodyProps()}>\r\n                {// Loop over the table rows\r\n                    // while using page, insted of rows\r\n                    // it shows only the rows for the active page - the amount of rows is a page\r\n                    page.map(row => {\r\n                        // Prepare the row for display\r\n                        prepareRow(row)\r\n                        return (\r\n                            // Apply the row props\r\n                            <tr class=\"text-center\" {...row.getRowProps()}>\r\n                                {// Loop over the rows cells\r\n                                    row.cells.map(cell => {\r\n                                        // Apply the cell props\r\n                                        return (\r\n                                            <td class=\"p-4\" {...cell.getCellProps()}>\r\n                                                {// Render the cell contents\r\n                                                    cell.render('Cell')}\r\n                                            </td>\r\n                                        )\r\n                                    })}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n\r\n            {/* Pagination */}\r\n            <div className=\"py-3 flex items-center justify-between\">\r\n                <div className=\"flex-1 flex justify-between sm:hidden\">\r\n                    {/*Is showed then the there is a small window width*/}\r\n                    <Button onClick={() => previousPage()} disabled={!canPreviousPage}>Previous</Button>\r\n                    <Button onClick={() => nextPage()} disabled={!canNextPage}>Next</Button>\r\n                </div>\r\n                <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n                    <div className=\"flex gap-x-2 items-baseline\">\r\n                        <span className=\"text-sm text-gray-700\">\r\n                            {/*Page x out of y*/}\r\n                          Page <span className=\"font-medium\">{state.pageIndex + 1}</span> of <span className=\"font-medium\">{pageOptions.length}</span>\r\n                        </span>\r\n                        <label>\r\n                            {/*amount of listed employees*/}\r\n                            <span className=\"sr-only\">Items Per Page</span>\r\n                            <select\r\n                                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n                                value={state.pageSize}\r\n                                onChange={e => {\r\n                                    setPageSize(Number(e.target.value))\r\n                                }}\r\n                            >\r\n                                {[5, 10, 20, 50, 100].map(pageSize => (\r\n                                    <option key={pageSize} value={pageSize}>\r\n                                        Show {pageSize}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\" aria-label=\"Pagination\">\r\n                            <PageButton\r\n                                className=\"rounded-l-md\"\r\n                                onClick={() => gotoPage(0)}\r\n                                disabled={!canPreviousPage}\r\n                            >\r\n                                {/*To the first page - dobbelt left arrow*/}\r\n                                <span className=\"sr-only\">First</span>\r\n                                <ChevronDoubleLeftIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                            </PageButton>\r\n                            <PageButton\r\n                                onClick={() => previousPage()}\r\n                                disabled={!canPreviousPage}\r\n                            >\r\n                                {/*Go one page back - one left arrow*/}\r\n                                <span className=\"sr-only\">Previous</span>\r\n                                <ChevronLeftIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                            </PageButton>\r\n                            <PageButton\r\n                                onClick={() => nextPage()}\r\n                                disabled={!canNextPage\r\n                                }>\r\n                                {/*Go one page forward - one right arrow*/}\r\n                                <span className=\"sr-only\">Next</span>\r\n                                <ChevronRightIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                            </PageButton>\r\n                            <PageButton\r\n                                className=\"rounded-r-md\"\r\n                                onClick={() => gotoPage(pageCount - 1)}\r\n                                disabled={!canNextPage}\r\n                            >\r\n                                {/*Go to last page - dobbel right arrow*/}\r\n                                <span className=\"sr-only\">Last</span>\r\n                                <ChevronDoubleRightIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                            </PageButton>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import Axios from 'axios'\r\nimport { EmployeeDisplay } from 'devops-shiftplanner/Backend/src/Types'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { UserContext } from './Context/UserContext'\r\n\r\nexport const Employees = () => {\r\n    // const { user, setUser } = useContext(UserContext)\r\n    const [data, setData] = useState<EmployeeDisplay[]>([])\r\n    const history = useHistory()\r\n\r\n    // const getOneUser = async () => {\r\n    //     const result = (\r\n    //         await Axios.post<User>('http://localhost:8080/login', user.id, { withCredentials: true })\r\n    //     ).data\r\n\r\n    //     setData(result)\r\n    //     console.log(result)\r\n    // }\r\n\r\n    const getAllUsers = async () => {\r\n        const result = (\r\n            await Axios.get<EmployeeDisplay[]>(`${process.env.REACT_APP_URL}/api/getEmployees`, {\r\n                withCredentials: true,\r\n            })\r\n        ).data\r\n\r\n        console.log(result)\r\n\r\n        setData(result)\r\n        console.log(result)\r\n    }\r\n\r\n    const getAvatar = (image: Buffer | undefined) => {\r\n        if (typeof image === 'undefined') {\r\n            return (\r\n                <img className=\"object-scale-down h-12 w-full\" src=\"https://freesvg.org/img/abstract-user-flat-4.png\" />\r\n            )\r\n        }\r\n        return image\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllUsers()\r\n    }, [])\r\n\r\n    return (\r\n        <tbody>\r\n            {data.map(r => (\r\n                <tr>\r\n                    <td>{getAvatar(r.avatar)}</td>\r\n                    <td>{r.firstname}</td>\r\n                    <td>{r.lastname}</td>\r\n                    <td>{r.email}</td>\r\n                    <td>{r.jobposition}</td>\r\n                    <td>{r.phone}</td>\r\n                    <td>{r.birthday}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    )\r\n}\r\n","import DarkModeIcon from '@mui/icons-material/DarkMode'\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\nimport PersonIcon from '@mui/icons-material/Person'\r\nimport SettingsIcon from '@mui/icons-material/Settings'\r\nimport { Switch } from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const Header = props => {\r\n    let [expanded, setExpanded] = useState(false)\r\n    let [theme, setTheme] = useState('light')\r\n    const history = useHistory()\r\n    let newTheme\r\n    const root = window.document.documentElement\r\n\r\n    function applyTheme() {\r\n        newTheme = theme === 'light' ? 'dark' : 'light'\r\n        root.classList.remove(theme)\r\n        root.classList.add(newTheme)\r\n        setTheme(newTheme)\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex items-center h-20 bg-lightPrimary dark:bg-primary transition duration-500 ease-in-out\">\r\n            <div className=\"w-10 h-10 mx-2 ml-5\">\r\n                <button type=\"button\" onClick={() => props.burgerMenuOnClick(!props.collapsed)}>\r\n                    <MenuIcon fontSize=\"large\" className=\"hover:text-white fill-current text-gray-300 h-20\" />\r\n                </button>\r\n            </div>\r\n            <h1 className=\"font-bold text-5xl text-white ml-2\">ShiftPlanner</h1>\r\n            <div className=\"flex flex-grow\"></div>\r\n\r\n            <div className=\"flex flex-row items-center bg-gray-100 dark:bg-secondary rounded-full py-1 text-black dark:text-white mx-2 mb-2 justify-self-end transition duration-500 ease-in-out\">\r\n                <img\r\n                    className=\"flex bg-primary rounded-full mx-2 h-8 w-8\"\r\n                    src=\"https://i.pinimg.com/280x280_RS/52/26/24/5226243d63b89badf9a7eaec2b4dc902.jpg\"\r\n                />\r\n                <div className=\"flex flex-col pl-1\">\r\n                    <p className=\"text-sm\">Shania Hau</p>\r\n                    <p className=\"text-xs\">Administator</p>\r\n                </div>\r\n                <button className=\"flex px-2\" onClick={() => setExpanded(!expanded)}>\r\n                    <KeyboardArrowDownIcon />\r\n                </button>\r\n            </div>\r\n            {expanded ? (\r\n                <div className=\"absolute grid grid-cols-1 top-20 right-3 bg-lightSecondary dark:bg-primary rounded-sm border-l-2 border-r-2 border-b-2 text-white transition duration-500 ease-in-out\">\r\n                    <div className=\"p-4 hover:bg-lightPrimary dark:hover:bg-secondary\">\r\n                        <button onClick={() => history.push(`/myprofile`)}>\r\n                            <PersonIcon />\r\n                            Min profil\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"p-4 hover:bg-lightPrimary dark:hover:bg-secondary\">\r\n                        <button onClick={() => history.push(`/settings`)}>\r\n                            <SettingsIcon />\r\n                            Indstillinger\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"p-2.5 hover:bg-lightPrimary dark:hover:bg-secondary\">\r\n                        <DarkModeIcon />\r\n                        Dark mode <Switch className=\"p-0\" onClick={() => applyTheme()} />\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n","\r\nconst feedBox = (user) => {\r\n    return(\r\n        <div>\r\n            <ul className=\"flex flex-row\">\r\n\r\n                <li>{user.firstname}</li>\r\n                <li>{user.lastname}</li>\r\n                <li>{user.email}</li>\r\n                <li>{user.birthday}</li>\r\n\r\n            </ul>\r\n        </div>)\r\n}\r\n\r\nexport const Home = () => {\r\n\r\n    return(\r\n    <div className=\"flex flex-row flex-grow m-5 transition \">\r\n        <div className=\"w-8/12 m-5 rounded-2xl bg-lightSecondary dark:bg-primary duration-500 ease-in-out\">\r\n            <h1 className=\"text-4xl text-white p-4 border-b-2 border-lightPrimary dark:border-white\">Nyheder</h1>\r\n            {/* <feedbox/> */}\r\n        </div>\r\n        <div className=\"w-4/12 flex flex-col flex-grow m-5 gap-y-12 \">\r\n            <div className=\"flex flex-col flex-grow rounded-2xl bg-lightSecondary dark:bg-primary duration-500 ease-in-out\">\r\n                <h1 className=\"h-auto text-2xl text-white p-4 border-b-2 border-lightPrimary dark:border-white\">Mine vagter</h1>\r\n                <div></div>\r\n            </div>\r\n            <div className=\"flex flex-col flex-grow rounded-2xl bg-lightSecondary dark:bg-primary duration-500 ease-in-out\">\r\n                <h1 className=\"text-2xl text-white p-4 border-b-2 border-lightPrimary dark:border-white\" >Ledige vagter</h1>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)}\r\n","export const PopUp = props => {\r\n    return props.trigger ? (\r\n        <div\r\n            className=\"fixed flex top-0 left-0 justify-center items-center bg-gray-500 bg-opacity-25 w-screen h-screen\"\r\n            id=\"PopUp-outer\"\r\n        >\r\n            <div className=\"relative flex flex-col flex-shrink bg-white p-3 w-1/6 rounded \" id=\"PopUp-inner\">\r\n                <button\r\n                    className=\"absolute w-8 h-8 right-0 top-0 border-black rounded  font-bold\"\r\n                    onClick={() => props.setTrigger(false)}\r\n                >\r\n                    {' '}\r\n                    X{' '}\r\n                </button>\r\n\r\n                <div className=\"flex flex-col justify-center items-center \">\r\n                    <span className=\"font-bold text-xl text-black p-2 rounded\"> {props.formtype} </span>\r\n\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <> </>\r\n    )\r\n}\r\n","import Axios from 'axios'\r\nimport { IRegisterProps } from 'devops-shiftplanner/Backend/src/Types'\r\nimport { useState } from 'react'\r\nimport { PopUp } from '../PopUp/PopUp'\r\n\r\nexport const RegisterForm = props => {\r\n    const [popUp, setPopUp] = useState(props.setPopTrue)\r\n    const [formData, setFormData] = useState<IRegisterProps>({\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        firstname: '',\r\n        lastname: '',\r\n        email: '',\r\n    })\r\n\r\n    const doRegister = async () => {\r\n        const result = await Axios.post(`${process.env.REACT_APP_URL}/api/register`, formData, {\r\n            withCredentials: true,\r\n        })\r\n        console.log(result)\r\n        return true\r\n    }\r\n\r\n    const clearFormData = () => {\r\n        setFormData({\r\n            username: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            firstname: '',\r\n            lastname: '',\r\n            email: '',\r\n        })\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const value = event.target.value\r\n        setFormData({\r\n            ...formData,\r\n            [event.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n        setPopUp(false)\r\n        console.log(formData)\r\n\r\n        // alert(formData.username + \" \" + formData.Password)\r\n\r\n        doRegister()\r\n    }\r\n\r\n    return props.popValues.isOpen ? (\r\n        <div>\r\n            <PopUp\r\n                trigger={props.popValues.isOpen}\r\n                setTrigger={props.popValues.setIsOpen}\r\n                formtype=\"Create new account\"\r\n                data-testId=\"PopUp\"\r\n            >\r\n                <div className=\"flex flex-col pt-4 pb-4 justify-center\">\r\n                    <div className=\"flex flex-col space-y-8 justify-center items-center font-bold\">\r\n                        <form className=\"flex flex-col space-y-3 items-center\" onSubmit={handleSubmit}>\r\n                            <label className=\"flex flex-col\">\r\n                                Username:\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"username\"\r\n                                    name=\"username\"\r\n                                    value={formData.username}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </label>\r\n\r\n                            <label className=\"flex flex-col\">\r\n                                Password:\r\n                                <input\r\n                                    type=\"password\"\r\n                                    placeholder=\"******\"\r\n                                    name=\"password\"\r\n                                    value={formData.password}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </label>\r\n\r\n                            <label className=\"flex flex-col\">\r\n                                Confirm password:\r\n                                <input\r\n                                    type=\"password\"\r\n                                    placeholder=\"******\"\r\n                                    name=\"confirmPassword\"\r\n                                    value={formData.confirmPassword}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </label>\r\n\r\n                            <label className=\"flex flex-col\">\r\n                                Firstname:\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"firstname\"\r\n                                    name=\"firstname\"\r\n                                    value={formData.firstname}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </label>\r\n\r\n                            <label className=\"flex flex-col\">\r\n                                Lastname:\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"lastname\"\r\n                                    name=\"lastname\"\r\n                                    value={formData.lastname}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </label>\r\n\r\n                            <label className=\"flex flex-col\">\r\n                                Email:\r\n                                <input\r\n                                    type=\"Email\"\r\n                                    placeholder=\"email@site.com\"\r\n                                    name=\"email\"\r\n                                    value={formData.email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <div id=\"incorrect\"> </div>\r\n                            </label>\r\n\r\n                            <button className=\"bg-sky-200 font-bold text-black text-md w-full \" type=\"submit\">\r\n                                {' '}\r\n                                Register{' '}\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </PopUp>\r\n        </div>\r\n    ) : (\r\n        <> </>\r\n    )\r\n}\r\n","import Axios from 'axios'\r\nimport { authUser } from 'devops-shiftplanner/Backend/src/Types'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { RegisterForm } from '../components/RegisterForm/RegisterView'\r\nimport { UserContext, authContextValue } from '../Context/UserContext'\r\n\r\nexport const LoginPage = () => {\r\n    const history = useHistory()\r\n\r\n    const { user, setUser } = useContext(UserContext)\r\n    const [randomData, setRandomData] = useState<string>()\r\n    const [authentication, setAuthentication] = useState({\r\n        username: '',\r\n        password: '',\r\n    })\r\n\r\n    const doLogin = async () => {\r\n        const result = (\r\n            await Axios.post<\r\n                { success: true; data: { id: string; role: boolean } } | { success: false; errorMessage: string }\r\n            >(`${process.env.REACT_APP_URL}/api/login`, authentication, { withCredentials: true })\r\n        ).data\r\n        console.log('Printing to check' + result.success)\r\n\r\n        if (result.success) {\r\n            console.log('Printing to check some other shit' + result.data)\r\n            console.log(result.data)\r\n            const formatUser: authUser = { id: result.data.id, role: result.data.role, loggedOn: true }\r\n            setUser(formatUser)\r\n            console.log('Loggin user data' + user.id, user.role, user.loggedOn)\r\n            history.push('/')\r\n        } else {\r\n            //@ts-ignore\r\n            alert(result.errorMessage)\r\n        }\r\n    }\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const togglePop = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user.loggedOn) {\r\n            history.push('/')\r\n        }\r\n    }, [user.loggedOn])\r\n\r\n    return (\r\n        <div className=\"flex bg-secondary h-screen w-screen\">\r\n            <div className=\"w-auto h-auto bg-loginColor mx-auto my-auto rounded-t-xl rounded-b-xl\">\r\n                <div className=\"shadow-md rounded px-8 pt-6 pb-8 mb-4 flex flex-col\">\r\n                    <div className=\"mb-8 text-4xl mx-auto text-white\">Shiftplanner</div>\r\n                    <div className=\"mb-4\">\r\n                        <label className=\"block mx-auto text-white text-sm mb-2\" htmlFor=\"username\">\r\n                            Username:\r\n                        </label>\r\n                        <input\r\n                            className=\"w-full mx-auto bg-secondary border-borderColor border-opacity-100 appearance-none border-2 rounded p-2 text-grey-darker md:text-white\"\r\n                            id=\"username\"\r\n                            onChange={e => setAuthentication({ ...authentication, username: e.target.value })}\r\n                            type=\"text\"\r\n                            placeholder=\"Username\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"mb-2\">\r\n                        <label className=\"block mx-auto text-white text-sm mb-2\" htmlFor=\"password\">\r\n                            Password:\r\n                        </label>\r\n                        <input\r\n                            className=\"w-full mx-auto bg-secondary border-borderColor border-opacity-100 appearance-none border-2 rounded p-2 text-grey-darker md:text-white\"\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            onChange={e => setAuthentication({ ...authentication, password: e.target.value })}\r\n                            placeholder=\"**********\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-3 flex justify-between\">\r\n                        <p className=\"text-white text-xs underline\">Forgot password?</p>\r\n                        <button className=\"text-white text-xs underline\" onClick={togglePop}>\r\n                            {' '}\r\n                            Register{' '}\r\n                        </button>\r\n                        {isOpen && <RegisterForm popValues={{ isOpen, setIsOpen }} />}\r\n                        {/* // <RegisterForm> Register </RegisterForm> */}\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <button className=\"flex rounded-lg bg-facebookColor text-white pr-2 py-2 m-auto w-52 hover:bg-hoverEffect\">\r\n                            <img\r\n                                className=\"rounded-full object-scale-down h-6 w-10\"\r\n                                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4f/Facebook_circle_pictogram.svg/1200px-Facebook_circle_pictogram.svg.png\"\r\n                            />\r\n                            Login with Facebook\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <button\r\n                            className=\"flex rounded-lg bg-googleColor text-black pr-2 py-2 m-auto w-52 hover:bg-googleHover hover:text-white\"\r\n                            \r\n                        >\r\n                            <img\r\n                                className=\"rounded-full object-scale-down h-6 w-10\"\r\n                                src=\"https://img.icons8.com/color/48/000000/google-logo.png\"\r\n                            />\r\n                            Login with Google\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"mt-8 divide-y divide-yellow-500\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"flex rounded-lg bg-borderColor pr-2 py-2 m-auto w-52 hover:bg-hoverEffect\"\r\n                            onClick={() => doLogin()}\r\n                        >\r\n                            <p className=\"flex m-auto text-white\">Sign In</p>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex \"></div>\r\n        </div>\r\n    )\r\n}\r\n","import Axios from 'axios'\r\nimport { EmployeeDisplay } from 'devops-shiftplanner/Backend/src/Types'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { UserContext } from './Context/UserContext'\r\n\r\nexport const MyProfile = () => {\r\n    const { user, setUser } = useContext(UserContext)\r\n    const [data, setData] = useState<EmployeeDisplay | undefined>()\r\n    const history = useHistory()\r\n\r\n    const getOneUser = async () => {\r\n        console.log(user.id)\r\n        const result = (\r\n            await Axios.post<EmployeeDisplay>(`${process.env.REACT_APP_URL}/api/getOneUser`, user, {\r\n                withCredentials: true,\r\n            })\r\n        ).data\r\n        console.log(result)\r\n\r\n        setData(result)\r\n        console.log(result)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOneUser()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {data && (\r\n                <div className=\"mt-10 ml-10\">\r\n                    <div className=\"flex flex-row\">\r\n                        <img\r\n                            className=\"rounded-full\"\r\n                            src=\"https://i.pinimg.com/280x280_RS/52/26/24/5226243d63b89badf9a7eaec2b4dc902.jpg\"\r\n                        />\r\n                        <div className=\"ml-4 place-self-center\">\r\n                            <h1 className=\" text-5xl text-black\">{data.firstname + ' ' + data.lastname}</h1>\r\n                            <h2>{data.role}</h2>\r\n                            <h4>id</h4>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"ml-5 mt-5\">\r\n                        <p>Brugernavn</p>\r\n                        <h3 className=\" text-3xl text-black\">{data.username}</h3>\r\n                        <p>E-mail</p>\r\n                        <h3 className=\" text-3xl text-black\">{data.email}</h3>\r\n                        <p>Fødselsdag</p>\r\n                        <h3 className=\" text-3xl text-black\">{data.birthday}</h3>\r\n                        <p>Telefon</p>\r\n                        <h3 className=\" text-3xl text-black\">{data.phone} </h3>\r\n                        <p>Adresse</p>\r\n                        <h3 className=\" text-3xl text-black\">{data.role}</h3>\r\n                        <p>Oprettet</p>\r\n                        <h3 className=\" text-3xl text-black\">{data.createdDate}</h3>\r\n\r\n                        <button className=\"mt-5 px-4 py-1.5 rounded-lg border-2 border-lightPrimary bg-lightSecondary font-bold text-black text-2xl hover:bg-opacity-80\">\r\n                            Redigér\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {!data && <div>Loading Data</div>}\r\n        </div>\r\n    )\r\n}\r\n","import AssignmentIcon from '@mui/icons-material/Assignment'\r\nimport BadgeIcon from '@mui/icons-material/Badge'\r\nimport PageView from '@mui/icons-material/Delete'\r\nimport GroupIcon from '@mui/icons-material/Group'\r\nimport HomeIcon from '@mui/icons-material/Home'\r\nimport { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { UserContext } from './Context/UserContext'\r\n\r\nexport const NavigationBar = props => {\r\n    const { user } = useContext(UserContext)\r\n    let [collapsed, setCollapsed] = useState(false)\r\n    const history = useHistory()\r\n    const titles = ['Hjem', 'Vagtplan', 'Dine vagter', 'Medarbejdere']\r\n\r\n    const IconHeader = title => {\r\n        ;<p className=\"pl-3\">{title}</p>\r\n    }\r\n\r\n    function handleCollapse() {\r\n        setCollapsed(!collapsed)\r\n    }\r\n\r\n    const triggerStuff = () => {\r\n        console.log(user.id + user.loggedOn + user.role)\r\n        history.push(`/`)\r\n    }\r\n\r\n    if (!props.collapsed) {\r\n        return (\r\n            <div className=\"flex flex-col w-64 bg-lightPrimary dark:bg-primary text-white text-lg select-none transition duration-500 ease-in-out\">\r\n                <ul className=\"flex flex-col flex-fill px-2 gap-1 inline-block align-top pt-2\">\r\n                    <button onClick={() => triggerStuff()}>\r\n                        <li className=\"flex h-16 hover:bg-lightSecondary dark:hover:bg-secondary rounded-sm px-5 py-4 transition duration-500 ease-in-out\">\r\n                            <div className=\"flex flex-row\">\r\n                                <HomeIcon /> <p className=\"pl-3\">Hjem</p>{' '}\r\n                            </div>\r\n                        </li>\r\n                    </button>\r\n                    <button onClick={() => history.push(`/calendar`)}>\r\n                        <li className=\"flex h-16 hover:bg-lightSecondary dark:hover:bg-secondary rounded-sm px-5 py-4 transition duration-500 ease-in-out\">\r\n                            <div className=\"flex flex-row\">\r\n                                <AssignmentIcon /> <p className=\"pl-3\">Vagtplan</p>{' '}\r\n                            </div>\r\n                        </li>\r\n                    </button>\r\n                    <button onClick={() => history.push(`/login`)}>\r\n                        <li className=\"flex h-16 hover:bg-lightSecondary dark:hover:bg-secondary rounded-sm px-5 py-4 transition duration-500 ease-in-out\">\r\n                            <div className=\"flex flex-row\">\r\n                                <BadgeIcon /> <p className=\"pl-3\">Mine vagter</p>{' '}\r\n                            </div>\r\n                        </li>\r\n                    </button>\r\n                    <button>\r\n                        <li className=\"flex h-16 hover:bg-lightSecondary dark:hover:bg-secondary rounded-sm px-5 py-4 transition duration-500 ease-in-out\">\r\n                            <button onClick={() => history.push(`/employeeTable`)}>\r\n                                <div className=\"flex flex-row\">\r\n                                    <GroupIcon /> <p className=\"pl-3\">Medarbejere</p>{' '}\r\n                                </div>\r\n                            </button>\r\n                        </li>\r\n                    </button>\r\n                    {user.role && (\r\n                        <button>\r\n                            <li className=\"flex h-16 hover:bg-lightSecondary dark:hover:bg-secondary rounded-sm px-5 py-4\">\r\n                                <button onClick={() => history.push(`/employees`)}>\r\n                                    <div className=\"flex flex-row\">\r\n                                        <PageView /> <p className=\"pl-3\">Testing</p>{' '}\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                        </button>\r\n                    )}\r\n\r\n                    {user.role && (\r\n                        <button>\r\n                            <li className=\"flex h-16 hover:bg-lightSecondary dark:hover:bg-secondary rounded-sm px-5 py-4\">\r\n                                <button onClick={() => history.push(`/employees`)}>\r\n                                    <div className=\"flex flex-row\">\r\n                                        <PageView /> <p className=\"pl-3\">Testing</p>{' '}\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                        </button>\r\n                    )}\r\n                </ul>\r\n                <div className=\"flex flex-grow\"></div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"flex flex-col w-26 bg-lightPrimary dark:bg-primary text-white text-lg select-none transition duration-500 ease-in-out\">\r\n                <ul className=\"flex flex-col flex-fill px-2 gap-1 inline-block align-top pt-2\">\r\n                    <button onClick={() => history.push(`/`)}>\r\n                        <li className=\"flex h-16 hover:bg-lightSecondary dark:hover:bg-secondary rounded-sm px-5 py-4 \">\r\n                            <div className=\"flex flex-row\">\r\n                                <HomeIcon />\r\n                            </div>\r\n                        </li>\r\n                    </button>\r\n                    <button onClick={() => history.push(`/calendar`)}>\r\n                        <li className=\"flex h-16 hover:bg-lightSecondary dark:hover:bg-secondary rounded-sm px-5 py-4\">\r\n                            <div className=\"flex flex-row\">\r\n                                <AssignmentIcon />{' '}\r\n                            </div>\r\n                        </li>\r\n                    </button>\r\n                    <button onClick={() => history.push(`/login`)}>\r\n                        <li className=\"flex h-16 hover:bg-lightSecondary dark:hover:bg-secondary rounded-sm px-5 py-4\">\r\n                            <div className=\"flex flex-row\">\r\n                                <BadgeIcon />{' '}\r\n                            </div>\r\n                        </li>\r\n                    </button>\r\n                    <li className=\"flex h-16 hover:bg-lightSecondary dark:hover:bg-secondary rounded-sm px-5 py-4\">\r\n                        <button>\r\n                            <div className=\"flex flex-row\">\r\n                                <GroupIcon />\r\n                            </div>\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"flex flex-grow\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Route, RouteProps, RouteComponentProps } from 'react-router-dom'\r\n\r\ntype PrivateRouteProps = RouteProps & {\r\n    auth: () => boolean\r\n    render: (props: RouteComponentProps<any>) => React.ReactNode\r\n    renderNoAuth: (props: RouteComponentProps<any>) => React.ReactNode\r\n}\r\n\r\nexport const PrivateRoute = (props: PrivateRouteProps) => {\r\n    return (\r\n        <Route\r\n            {...{\r\n                ...props,\r\n                render: renderProps => (props.auth() ? props.render(renderProps) : props.renderNoAuth(renderProps)),\r\n            }}\r\n        />\r\n    )\r\n}\r\n","\r\nconst SettingsButton = (props) => {\r\n    return(\r\n        <button className=\"w-56 px-6 py-1.5 text-2xl font-bold text-white rounded-lg border-2 border-lightPrimary dark:border-primary bg-lightSecondary hover:bg-opacity-80 dark:bg-secondary dark:hover:bg-secondary filter dark:hover:brightness-50 shadow-lg transition duration-500 ease-in-out\">{props.title}</button>\r\n    )\r\n}\r\n\r\nexport const Settings = () => {\r\n\r\n    return (\r\n        <div className=\"flex flex-row\">\r\n            <ul className=\"flex flex-col h-full ml-5 p-2 justify-center gap-y-10\">\r\n                <li><SettingsButton title='Generelt'/></li>\r\n                <li><SettingsButton title='Kalender'/></li>\r\n                <li><SettingsButton title='Algoritmen'/></li>\r\n                <li><SettingsButton title='Grænseflade'/></li>\r\n                <li><SettingsButton title='Forbindelser'/></li>\r\n                <li><SettingsButton title='Brugerflade'/></li>\r\n\r\n            </ul>\r\n            <div className=\"flex w-full mx-5 my-5 mr-5 border-2 border-lightgrey rounded-md \">\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { CalendarDay } from './components/calendar_Components/Calendar/Calendar_Day/Calender_View_Day'\r\nimport { Calendar } from './components/calendar_Components/Calendar/Calendar_Month/Calendar_View_Month'\r\nimport { EmployeeTable } from './components/table_Components/Table'\r\nimport { UserContext } from './Context/UserContext'\r\nimport { Employees } from './Employees'\r\nimport { Header } from './Header'\r\nimport { Home } from './Home'\r\nimport { LoginPage } from './loginPage/LoginPage'\r\nimport { MyProfile } from './MyProfile'\r\nimport { NavigationBar } from './NavigationBar'\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { Settings } from './Settings'\r\n\r\nexport const MainBody = () => {\r\n    const { user, setUser } = useContext(UserContext)\r\n    const noAuth = () => <Redirect to={'/login'} />\r\n\r\n    let [navBarCollapsed, setNavBarCollapsed] = useState(false)\r\n\r\n    useEffect(() => {\r\n        document.title = 'Shiftplanner'\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route exact path=\"/login\" render={() => <LoginPage />} />\r\n\r\n                    <div className=\"flex flex-col min-h-screen\">\r\n                        <Header collapsed={navBarCollapsed} burgerMenuOnClick={setNavBarCollapsed} />\r\n                        <div className=\"flex flex-row flex-auto\">\r\n                            <NavigationBar collapsed={navBarCollapsed} />\r\n                            <div className=\"flex w-screen bg-white dark:bg-secondary transition duration-500 ease-in-out \">\r\n                                {/* <Route exact path=\"/\" render={() => <Home />} />\r\n                                <Route exact path=\"/calendar\" render={() => <Calendar />} />\r\n                                <Route exact path=\"/calendarDay\" render={() => <CalendarDay />} />\r\n                                <Route exact path=\"/employeeTable\" render={() => <EmployeeTable />} />\r\n                                <Route exact path=\"/employees\" render={() => <Employees />} />\r\n                                <Route exact path=\"/myprofile\" render={() => <MyProfile />} />\r\n                                <Route exact path=\"/settings\" render={() => <Settings />} /> */}\r\n                                <Route\r\n                                    exact\r\n                                    path=\"/\"\r\n                                    render={() => (\r\n                                        <>\r\n                                            {user.loggedOn && <Home />}\r\n                                            {!user.loggedOn && noAuth()}\r\n                                        </>\r\n                                    )}\r\n                                />\r\n                                <PrivateRoute\r\n                                    exact\r\n                                    path=\"/calendar\"\r\n                                    auth={() => user.loggedOn}\r\n                                    renderNoAuth={noAuth}\r\n                                    render={() => <Calendar />}\r\n                                />\r\n                                <PrivateRoute\r\n                                    exact\r\n                                    path=\"/settings\"\r\n                                    auth={() => user.loggedOn}\r\n                                    renderNoAuth={noAuth}\r\n                                    render={() => <Settings />}\r\n                                />\r\n                                <PrivateRoute\r\n                                    exact\r\n                                    path=\"/myprofile\"\r\n                                    auth={() => user.loggedOn}\r\n                                    renderNoAuth={noAuth}\r\n                                    render={() => <MyProfile />}\r\n                                />\r\n                                <PrivateRoute\r\n                                    exact\r\n                                    path=\"/calendarDay/:date\"\r\n                                    auth={() => user.loggedOn}\r\n                                    renderNoAuth={noAuth}\r\n                                    render={() => <CalendarDay />}\r\n                                />\r\n                                <PrivateRoute\r\n                                    exact\r\n                                    path=\"/employeeTable\"\r\n                                    auth={() => user.loggedOn}\r\n                                    renderNoAuth={noAuth}\r\n                                    render={() => <EmployeeTable />}\r\n                                />\r\n                                <PrivateRoute\r\n                                    exact\r\n                                    path=\"/employees\"\r\n                                    auth={() => user.loggedOn}\r\n                                    renderNoAuth={noAuth}\r\n                                    render={() => <Employees />}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </div>\r\n    )\r\n}\r\n","import * as ReactDOM from 'react-dom'\r\nimport UserContextProvider from './Context/UserContext'\r\nimport './index.css'\r\nimport { MainBody } from './MainBody'\r\n\r\nReactDOM.render(\r\n    <UserContextProvider>\r\n        <MainBody />\r\n    </UserContextProvider>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}